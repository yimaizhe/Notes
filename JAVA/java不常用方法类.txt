一，Iterator迭代器
     迭代器是一种设计模式，它是一个对象，它可以遍历并选择序列中的对象，而开发人员不需要了解该序列的底层结构。迭代器通常被称为“轻量级”对象，因为创建它的代价小。

　　Java中的Iterator功能比较简单，并且只能单向移动：

　　(1) 使用方法iterator()要求容器返回一个Iterator。第一次调用Iterator的next()方法时，它返回序列的第一个元素。注意：iterator()方法是java.lang.Iterable接口,被Collection继承。

　　(2) 使用next()获得序列中的下一个元素。

　　(3) 使用hasNext()检查序列中是否还有元素。

　　(4) 使用remove()将迭代器新返回的元素删除
二，RandomAccessFile 读文件
     用来访问那些保存数据记录的文件的，你就可以用seek( )方法来访问记录，并进行读写了。这些记录的大小不必相同；但是其大小和位置必须是可知的。但是该类仅限于操作文件。是一个直接继承Object的，独立的类。
    
     与InputStream和OutputStream没关系，作用类似

三，StringTokenizer 分隔字符串的类，相当于split
     StringTokenizer(String arg1, String arg2, boolean arg3)
     arg1:  待分隔的字符串
     arg2: 指定的分隔字符集，默认“ \t\n\r”,空格、制表、换行、回车
     arg3: 是否返回分隔符





